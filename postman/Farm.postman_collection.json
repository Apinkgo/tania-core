{
	"info": {
		"name": "Farm",
		"_postman_id": "4249e317-a1ec-8300-cac2-f02ac7068544",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Farm",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1932c410-6c41-459e-8624-05f7025dfe3a",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody)",
							"if (data.data) {",
							"    pm.environment.set(\"FARM_ID\", data.data.uid);   ",
							"}"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "e209025f-8988-4097-893a-34bf382171e7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "My Farm 1",
							"type": "text",
							"description": "Required. Alphanumeric, hypen, space, underscore. Min 5 char, max 100 char"
						},
						{
							"key": "description",
							"value": "",
							"type": "text",
							"description": "Optional"
						},
						{
							"key": "latitude",
							"value": "10.00",
							"type": "text",
							"description": "Required"
						},
						{
							"key": "longitude",
							"value": "11.00",
							"type": "text",
							"description": "Required"
						},
						{
							"key": "farm_type",
							"value": "organic",
							"type": "text",
							"description": "Required. options: organic, hidroponic"
						},
						{
							"key": "country_code",
							"value": "ID",
							"type": "text",
							"description": "Required: options example: ID. This should be got from backend."
						},
						{
							"key": "city_code",
							"value": "JK",
							"type": "text",
							"description": "Required: options example: JK. This should be got from backend."
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Create Farm's Reservoir",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0d51f804-8123-4cca-99db-2d69ea6e3ba6",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody)",
							"if (data.data) {",
							"    pm.environment.set(\"RESERVOIR_ID\", data.data.uid);   ",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "MyReservoir1",
							"type": "text",
							"description": "Required. Alphanumeric, hypen, space, underscore. Min 5 char, max 100 char"
						},
						{
							"key": "type",
							"value": "TAP",
							"type": "text",
							"description": "Requred. Options: BUCKET, TAP.\nIf BUCKET then `capacity` is required\nif TAP then `capacity` is not required"
						},
						{
							"key": "capacity",
							"value": "100",
							"type": "text",
							"description": "Required. \nIf bucket then `capacity` is required.\nif tap then `capacity` is not required."
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms/{{FARM_ID}}/reservoirs",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"{{FARM_ID}}",
						"reservoirs"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Create Farm's Area",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "98587349-0854-451b-b8ee-602fce10941a",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody)",
							"if (data.data) {",
							"    pm.environment.set(\"AREA_ID\", data.data.uid);   ",
							"    ",
							"    areaCount = parseInt(pm.environment.get(\"AREA_COUNT\"))+1",
							"    ",
							"    pm.environment.set(\"AREA_COUNT\", areaCount)",
							"    ",
							"    if (areaCount == 2) {",
							"        postman.setNextRequest(\"Create Farm Material Seed\")",
							"    } else {",
							"        pm.environment.set(\"DST_AREA_ID\", data.data.uid)",
							"        postman.setNextRequest(\"Create Farm's Area\")",
							"    }",
							"}"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "5d20450f-1883-4630-8122-389bf63259bc",
						"type": "text/javascript",
						"exec": [
							"areaCount = parseInt(pm.environment.get(\"AREA_COUNT\"))",
							"",
							"if (areaCount == 0) {",
							"    pm.environment.set(\"AREA_TYPE\", \"GROWING\")",
							"    pm.environment.set(\"AREA_NAME\", \"MY AREA GROWING\")",
							"} else if (areaCount == 1) {",
							"    pm.environment.set(\"AREA_TYPE\", \"SEEDING\")",
							"    pm.environment.set(\"AREA_NAME\", \"MY AREA SEEDING\")",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{AREA_NAME}}",
							"description": "Required. Alphanumeric, hypen, space, underscore. Min 5 char, max 100 char",
							"type": "text"
						},
						{
							"key": "size",
							"value": "10",
							"description": "Required, number, size cannot be <= 0",
							"type": "text"
						},
						{
							"key": "size_unit",
							"value": "m2",
							"description": "Required, alpha. options: Ha, m2",
							"type": "text"
						},
						{
							"key": "type",
							"value": "{{AREA_TYPE}}",
							"description": "Required, alpha. options: SEEDING, GROWING",
							"type": "text"
						},
						{
							"key": "location",
							"value": "OUTDOOR",
							"description": "Required, alpha. options: INDOOR, OUTDOOR",
							"type": "text"
						},
						{
							"key": "reservoir_id",
							"value": "{{RESERVOIR_ID}}",
							"description": "Required, number",
							"type": "text"
						},
						{
							"key": "photo",
							"value": "",
							"description": "Optional",
							"type": "file"
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms/{{FARM_ID}}/areas",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"{{FARM_ID}}",
						"areas"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create Farm Material Seed",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e075d3c6-7ced-4ec4-82e8-551db06669ac",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody)",
							"if (data.data) {",
							"    postman.setNextRequest(\"Create Area's Crop Batch\")",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "Brocolli Super Green 3",
							"type": "text",
							"description": "required. string."
						},
						{
							"key": "plant_type",
							"value": "VEGETABLE",
							"type": "text",
							"description": "required. options: VEGETABLE, FRUIT, HERB, FLOWER, TREE."
						},
						{
							"key": "price_per_unit",
							"value": "10",
							"description": "required. float.",
							"type": "text"
						},
						{
							"key": "currency_code",
							"value": "EUR",
							"description": "required. options: EUR",
							"type": "text"
						},
						{
							"key": "quantity",
							"value": "10",
							"description": "required. float.",
							"type": "text"
						},
						{
							"key": "quantity_unit",
							"value": "PACKETS",
							"description": "required. options: SEEDS, PACKETS, GRAM, KILOGRAM",
							"type": "text"
						},
						{
							"key": "expiration_date",
							"value": "2018-01-25",
							"description": "optional. YYYY-MM-DD",
							"type": "text"
						},
						{
							"key": "notes",
							"value": "",
							"description": "optional. string",
							"type": "text"
						},
						{
							"key": "is_expense",
							"value": "false",
							"description": "optional. boolean",
							"type": "text"
						},
						{
							"key": "produced_by",
							"value": "",
							"description": "optional. string",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms/inventories/materials/seed",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"inventories",
						"materials",
						"seed"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Create Farm Material Agrochemical",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "55bb9604-03f3-44aa-9b11-f7b6bc77cc61",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "A Good One Fertilizer For All",
							"type": "text",
							"description": "required. string."
						},
						{
							"key": "chemical_type",
							"value": "FERTILIZER",
							"type": "text",
							"description": "required. options: DISINFECTANT, FERTILIZER, HORMONE, MANURE, PESTICIDE."
						},
						{
							"key": "price_per_unit",
							"value": "10",
							"description": "required. float.",
							"type": "text"
						},
						{
							"key": "currency_code",
							"value": "EUR",
							"description": "required. options: EUR",
							"type": "text"
						},
						{
							"key": "quantity",
							"value": "10",
							"description": "required. float.",
							"type": "text"
						},
						{
							"key": "quantity_unit",
							"value": "PACKETS",
							"description": "required. options: PACKETS, BOTTLES, BAGS ",
							"type": "text"
						},
						{
							"key": "expiration_date",
							"value": "2018-01-25",
							"description": "optional. YYYY-MM-DD",
							"type": "text"
						},
						{
							"key": "notes",
							"value": "",
							"description": "optional. string",
							"type": "text"
						},
						{
							"key": "is_expense",
							"value": "false",
							"description": "optional. boolean",
							"type": "text"
						},
						{
							"key": "produced_by",
							"value": "",
							"description": "optional. string",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms/inventories/materials/agrochemical",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"inventories",
						"materials",
						"agrochemical"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Create Farm Material Growing Medium",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4d66caf7-b901-45bb-93f5-d51224bcff49",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "Good Soil For All",
							"type": "text",
							"description": "required. string."
						},
						{
							"key": "price_per_unit",
							"value": "10",
							"description": "required. float.",
							"type": "text"
						},
						{
							"key": "currency_code",
							"value": "EUR",
							"description": "required. options: EUR",
							"type": "text"
						},
						{
							"key": "quantity",
							"value": "10",
							"description": "required. float.",
							"type": "text"
						},
						{
							"key": "quantity_unit",
							"value": "BAGS",
							"description": "required. options: BAGS, CUBIC_METRE",
							"type": "text"
						},
						{
							"key": "expiration_date",
							"value": "",
							"description": "optional. YYYY-MM-DD",
							"type": "text"
						},
						{
							"key": "notes",
							"value": "",
							"description": "optional. string",
							"type": "text"
						},
						{
							"key": "is_expense",
							"value": "false",
							"description": "optional. boolean",
							"type": "text"
						},
						{
							"key": "produced_by",
							"value": "",
							"description": "optional. string",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms/inventories/materials/growing_medium",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"inventories",
						"materials",
						"growing_medium"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Create Farm Material Label and Crop Support",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "48d0633f-d369-4371-a3e8-c6d79d586948",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "Soft Label For Crops",
							"type": "text",
							"description": "required. string."
						},
						{
							"key": "price_per_unit",
							"value": "10",
							"description": "required. float.",
							"type": "text"
						},
						{
							"key": "currency_code",
							"value": "EUR",
							"description": "required. options: EUR",
							"type": "text"
						},
						{
							"key": "quantity",
							"value": "10",
							"description": "required. float.",
							"type": "text"
						},
						{
							"key": "quantity_unit",
							"value": "PIECES",
							"description": "required. options: PIECES",
							"type": "text"
						},
						{
							"key": "expiration_date",
							"value": "",
							"description": "optional. YYYY-MM-DD",
							"type": "text"
						},
						{
							"key": "notes",
							"value": "",
							"description": "optional. string",
							"type": "text"
						},
						{
							"key": "is_expense",
							"value": "false",
							"description": "optional. boolean",
							"type": "text"
						},
						{
							"key": "produced_by",
							"value": "",
							"description": "optional. string",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms/inventories/materials/label_and_crop_support",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"inventories",
						"materials",
						"label_and_crop_support"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Create Farm Material Seeding Container",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "35e66d65-8bc7-4d0f-9363-ad06948f9734",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "Super Tray Plant Seeding",
							"type": "text",
							"description": "required. string."
						},
						{
							"key": "container_type",
							"value": "TRAY",
							"description": "required. Options: TRAY, POT",
							"type": "text"
						},
						{
							"key": "price_per_unit",
							"value": "10",
							"description": "required. float.",
							"type": "text"
						},
						{
							"key": "currency_code",
							"value": "EUR",
							"description": "required. options: EUR",
							"type": "text"
						},
						{
							"key": "quantity",
							"value": "10",
							"description": "required. float.",
							"type": "text"
						},
						{
							"key": "quantity_unit",
							"value": "PIECES",
							"description": "required. options: PIECES",
							"type": "text"
						},
						{
							"key": "expiration_date",
							"value": "2018-01-25",
							"description": "optional. YYYY-MM-DD",
							"type": "text"
						},
						{
							"key": "notes",
							"value": "Great!",
							"description": "optional. string",
							"type": "text"
						},
						{
							"key": "is_expense",
							"value": "true",
							"description": "optional. boolean",
							"type": "text"
						},
						{
							"key": "produced_by",
							"value": "IKEA",
							"description": "optional. string",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms/inventories/materials/seeding_container",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"inventories",
						"materials",
						"seeding_container"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Create Farm Material Post Harvest Supply",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "52b75596-3567-4d3b-9b48-be2076dbe738",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "A Good Plastic For Harvested Crop",
							"type": "text",
							"description": "required. string."
						},
						{
							"key": "price_per_unit",
							"value": "10",
							"description": "required. float.",
							"type": "text"
						},
						{
							"key": "currency_code",
							"value": "EUR",
							"description": "required. options: EUR",
							"type": "text"
						},
						{
							"key": "quantity",
							"value": "10",
							"description": "required. float.",
							"type": "text"
						},
						{
							"key": "quantity_unit",
							"value": "PIECES",
							"description": "required. options: PIECES",
							"type": "text"
						},
						{
							"key": "expiration_date",
							"value": "",
							"description": "optional. YYYY-MM-DD",
							"type": "text"
						},
						{
							"key": "notes",
							"value": "",
							"description": "optional. string",
							"type": "text"
						},
						{
							"key": "is_expense",
							"value": "false",
							"description": "optional. boolean",
							"type": "text"
						},
						{
							"key": "produced_by",
							"value": "",
							"description": "optional. string",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms/inventories/materials/post_harvest_supply",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"inventories",
						"materials",
						"post_harvest_supply"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Create Farm Material Other",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ffc11af4-e42b-4b9b-9d9c-d5d0b61a20fb",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "Outdoor Bright Lamp",
							"type": "text",
							"description": "required. string."
						},
						{
							"key": "price_per_unit",
							"value": "10",
							"description": "required. float.",
							"type": "text"
						},
						{
							"key": "currency_code",
							"value": "EUR",
							"description": "required. options: EUR",
							"type": "text"
						},
						{
							"key": "quantity",
							"value": "10",
							"description": "required. float.",
							"type": "text"
						},
						{
							"key": "quantity_unit",
							"value": "PIECES",
							"description": "required. options: PIECES",
							"type": "text"
						},
						{
							"key": "expiration_date",
							"value": "",
							"description": "optional. YYYY-MM-DD",
							"type": "text"
						},
						{
							"key": "notes",
							"value": "",
							"description": "optional. string",
							"type": "text"
						},
						{
							"key": "is_expense",
							"value": "false",
							"description": "optional. boolean",
							"type": "text"
						},
						{
							"key": "produced_by",
							"value": "",
							"description": "optional. string",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms/inventories/materials/other",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"inventories",
						"materials",
						"other"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Create Area's Crop Batch",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7d570c3a-8850-4e2c-b27d-8d61dc10fc83",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody)",
							"if (data.data) {",
							"    pm.environment.set(\"CROP_ID\", data.data.uid);   ",
							"    ",
							"    pm.environment.set(\"AREA_COUNT\", 0)",
							"    postman.setNextRequest(null)",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "crop_type",
							"value": "SEEDING",
							"type": "text",
							"description": "required. string. options: SEEDING, GROWING"
						},
						{
							"key": "plant_type",
							"value": "VEGETABLE",
							"type": "text",
							"description": "required. string. options: VEGETABLE, FRUIT, HERB, FLOWER, TREE"
						},
						{
							"key": "name",
							"value": "Brocolli Super Green 3",
							"type": "text",
							"description": "required. string. This should be gotten from `Get Farms's Available Inventories`"
						},
						{
							"key": "container_quantity",
							"value": "10",
							"type": "text",
							"description": "required. number."
						},
						{
							"key": "container_type",
							"value": "TRAY",
							"type": "text",
							"description": "required. options: POT, TRAY"
						},
						{
							"key": "container_cell",
							"value": "15",
							"type": "text",
							"description": "optiona. if container_type == tray then this is required."
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms/areas/{{AREA_ID}}/crops",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"areas",
						"{{AREA_ID}}",
						"crops"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Get All Farms",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1c570736-c2d7-4522-8772-f226d32949aa",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "82f8c89a-7360-46bd-8948-c3df92a3b992",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/farms",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms"
					]
				},
				"description": "Get all available farms"
			},
			"response": []
		},
		{
			"name": "Get Farm's Reservoirs",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ded1531b-0f60-4b97-9e84-8ff380f42487",
						"type": "text/javascript",
						"exec": [
							"postman.setNextRequest(null)"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/farms/{{FARM_ID}}/reservoirs",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"{{FARM_ID}}",
						"reservoirs"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Get Farm Types",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/farms/types",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"types"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Get Farm By ID",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/farms/{{FARM_ID}}",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"{{FARM_ID}}"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Get Farm's Areas",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/farms/{{FARM_ID}}/areas",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"{{FARM_ID}}",
						"areas"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Get Farm Area File",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/farms/{{FARM_ID}}/areas/{{AREA_ID}}/photos",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"{{FARM_ID}}",
						"areas",
						"{{AREA_ID}}",
						"photos"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Get Farm Inventories",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/farms/inventories/materials",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"inventories",
						"materials"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Farm's Areas By ID",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/farms/{{FARM_ID}}/areas/{{AREA_ID}}",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"{{FARM_ID}}",
						"areas",
						"{{AREA_ID}}"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Get Farm's Reservoirs By ID",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/farms/{{FARM_ID}}/reservoirs/{{RESERVOIR_ID}}",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"{{FARM_ID}}",
						"reservoirs",
						"{{RESERVOIR_ID}}"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Get Farm's Available Inventories",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/farms/inventories/materials/available_seed",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"inventories",
						"materials",
						"available_seed"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Plant Types",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/farms/inventories/plant_types",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"inventories",
						"plant_types"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Get Farm's Crops",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/farms/{{FARM_ID}}/crops",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"{{FARM_ID}}",
						"crops"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Farm's Crops By Area",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/farms/areas/{{AREA_ID}}/crops",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"areas",
						"{{AREA_ID}}",
						"crops"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Crops By ID",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/farms/crops/{{CROP_ID}}",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"crops",
						"{{CROP_ID}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create Crop's Photo",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "photo",
							"value": "",
							"description": "",
							"type": "file"
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms/crops/{{CROP_ID}}/photos",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"crops",
						"{{CROP_ID}}",
						"photos"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Crop's Photo",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/farms/crops/{{CROP_ID}}/photos",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"crops",
						"{{CROP_ID}}",
						"photos"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create Area's Notes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "431ee28c-2902-43a7-95e0-79c4657905f2",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody)",
							"if (data.data) {",
							"    pm.environment.set(\"AREA_NOTE_ID\", data.data.notes[data.data.notes.length-1].uid);   ",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "content",
							"value": "This should be my first notes and i want this to be somewhat lengthful. I think this is lengthly enough.",
							"description": "required. string.",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms/areas/{{AREA_ID}}/notes",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"areas",
						"{{AREA_ID}}",
						"notes"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create Reservoir's Notes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fef2b74b-5bf1-4a40-8d8d-31bff57692fd",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody)",
							"if (data.data) {",
							"    pm.environment.set(\"RESERVOIR_NOTE_ID\", data.data.notes[data.data.notes.length-1].uid);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "content",
							"value": "This should be my first notes and i want this to be somewhat lengthful. I think this is lengthly enough.",
							"description": "required. string.",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms/reservoirs/{{RESERVOIR_ID}}/notes",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"reservoirs",
						"{{RESERVOIR_ID}}",
						"notes"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create Crop's Notes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4490da8f-0f3e-44d5-a88b-2296daffdb41",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody)",
							"if (data.data) {",
							"    pm.environment.set(\"CROP_NOTE_ID\", data.data.notes[data.data.notes.length-1].uid);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "content",
							"value": "This should be my first notes and i want this to be somewhat lengthful. I think this is lengthly enough.",
							"description": "required. string",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms/crops/{{CROP_ID}}/notes",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"crops",
						"{{CROP_ID}}",
						"notes"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Remove Area's Notes",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/farms/areas/{{AREA_ID}}/notes/{{AREA_NOTE_ID}}",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"areas",
						"{{AREA_ID}}",
						"notes",
						"{{AREA_NOTE_ID}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Remove Reservoir's Notes",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/farms/reservoirs/{{RESERVOIR_ID}}/notes/{{RESERVOIR_NOTE_ID}}",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"reservoirs",
						"{{RESERVOIR_ID}}",
						"notes",
						"{{RESERVOIR_NOTE_ID}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Remove Crop's Notes",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/farms/crops/{{CROP_ID}}/notes/{{CROP_NOTE_ID}}",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"crops",
						"{{CROP_ID}}",
						"notes",
						"{{CROP_NOTE_ID}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b0e5944f-c665-4af0-8e22-9c5846fea938",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody)",
							"if (data.data) {",
							"    pm.environment.set(\"TASK_ID\", data.data.uid);",
							"    pm.environment.set(\"ASSET_ID\", data.data.asset_id);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "description",
							"value": "Water area",
							"type": "text",
							"description": "required string"
						},
						{
							"key": "due_date",
							"value": "2019-01-23T17:37:39.697328206+01:00",
							"type": "text",
							"description": "required time equal to or later than current time"
						},
						{
							"key": "priority",
							"value": "normal",
							"type": "text",
							"description": "required string. Options: normal, urgent"
						},
						{
							"key": "asset_id",
							"value": "{{AREA_ID}}",
							"type": "text",
							"description": "required asset uid"
						},
						{
							"key": "type",
							"value": "area",
							"type": "text",
							"description": "required string. Options: area, reservoir, crop, inventory, device, finance"
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/tasks/",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"tasks",
						""
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Get All Tasks",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/tasks",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Task By ID",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/tasks/{{TASK_ID}}",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"tasks",
						"{{TASK_ID}}"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Set Task As Due",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/tasks/{{TASK_ID}}/due",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"tasks",
						"{{TASK_ID}}",
						"due"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Get Task By Asset ID",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{API_HOST}}/tasks",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"tasks"
					]
				},
				"description": null
			},
			"response": []
		},
		{
			"name": "Move Area",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "source_area_id",
							"value": "{{AREA_ID}}",
							"description": "Required. The UID of crop's area",
							"type": "text"
						},
						{
							"key": "destination_area_id",
							"value": "{{DST_AREA_ID}}",
							"description": "Required. The UID of the area destination.",
							"type": "text"
						},
						{
							"key": "quantity",
							"value": "5",
							"description": "Required. int. How much you want to move.",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms/crops/{{CROP_ID}}/move",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"crops",
						"{{CROP_ID}}",
						"move"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Harvest Crop",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "source_area_id",
							"value": "{{AREA_ID}}",
							"description": "Required. The UID of crop's area",
							"type": "text"
						},
						{
							"key": "harvest_type",
							"value": "PARTIAL",
							"description": "Required. Options: ALL, PARTIAL",
							"type": "text"
						},
						{
							"key": "produced_quantity",
							"value": "5",
							"description": "Required. float",
							"type": "text"
						},
						{
							"key": "produced_unit",
							"value": "Kg",
							"description": "Required: Options: Kg, Gr",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms/crops/{{CROP_ID}}/harvest",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"crops",
						"{{CROP_ID}}",
						"harvest"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Dump Crop",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "source_area_id",
							"value": "{{AREA_ID}}",
							"description": "Required. The UID of crop's area",
							"type": "text"
						},
						{
							"key": "quantity",
							"value": "1",
							"description": "Required. int.",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms/crops/{{CROP_ID}}/dump",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"crops",
						"{{CROP_ID}}",
						"dump"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Water Crop",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "source_area_id",
							"value": "{{AREA_ID}}",
							"description": "Required. The UID of an area",
							"type": "text"
						},
						{
							"key": "watering_date",
							"value": "2018-01-15",
							"description": "Required. yyyy-mm-dd",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{API_HOST}}/farms/crops/{{CROP_ID}}/water",
					"host": [
						"{{API_HOST}}"
					],
					"path": [
						"farms",
						"crops",
						"{{CROP_ID}}",
						"water"
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}